Server socket
#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<fcntl.h>
#include<string.h>
#define SERV_TCP_PORT 6880
#define SERV_HOST_ADDR "127.0.0.1"
int main()
{
int sockfd,newsockfd,clilen;
struct sockaddr_in cli_addr,serv_addr;
char filename[25],buf[1000];
int n,m;
int fd;
if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
printf("server: can't open stream socket\n");
else
printf("server: stream socket opened successfully\n");
serv_addr.sin_family=AF_INET;
serv_addr.sin_addr.s_addr=htonl(INADDR_ANY);
serv_addr.sin_port=htons(SERV_TCP_PORT);
if((bind(sockfd,(struct sockaddr*) & serv_addr,sizeof(serv_addr)))<0)
printf("server: can't bind to local address\n");
else
printf("server:bound to local address\n");
listen(sockfd,5);
printf("\n SERVER:waiting for client.......\n");
for(;;)
{
clilen=sizeof(cli_addr);
newsockfd=accept(sockfd,(struct sockaddr*) & cli_addr,&clilen);
if(newsockfd<0)
printf("server:accept error\n");
else
printf("server:accepted\n");
n=read(newsockfd,filename,25);
filename[n]='\0';
printf("\n SERVER:%s is found and ready to transfer\n",filename);
fd=open(filename,O_RDONLY);
n=read(fd,buf,1000);
buf[n]='\0';
write(newsockfd,buf,n);
printf("\n transfer success\n");
close(newsockfd);
}
}

Client socket
#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<fcntl.h>
#include<string.h>
#define SERV_TCP_PORT 6880
#define SERV_HOST_ADDR "127.0.0.1"
int main()
{
int sockfd;
struct sockaddr_in serv_addr,cli_addr;
char filename[25],buf[1000];
int n;
serv_addr.sin_family=AF_INET;
serv_addr.sin_addr.s_addr=inet_addr(SERV_HOST_ADDR);
serv_addr.sin_port=htons(SERV_TCP_PORT);
if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
printf("client: can't open stream socket\n");
else
printf("client: stream socket opened successfully\n");
if((connect(sockfd,(struct sockaddr*) & serv_addr,sizeof(serv_addr)))<0)
printf("client: can't connect to server\n");
else
printf("client:connected to server successfully\n");
printf("enter the filename to be displayed:");
scanf("%s",filename);
write(sockfd,filename,strlen(filename));
printf("\n filename transferred to server\n");
n=read(sockfd,buf,1000);
if(n<0)
printf("error reading from socket\n");
printf("client: displaying the file content of %s\n",filename);
fputs(buf,stdout);
close(sockfd);
}
